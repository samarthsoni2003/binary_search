https://www.codingninjas.com/studio/problems/binary-search_972?utm_source=youtube&utm_medium=affiliate&utm_campaign=codestudio_Striver_BinarySeries

logic 1 recursive approach

int bs(vector<int>& nums,int target,int low,int high){
    if(low>high){
        return -1;
    }
    int mid=low+((high-low)/2);
    if(nums[mid]==target){
        return mid;
    }
    else if(nums[mid]>target){
        return bs(nums,target,low,mid-1);
    }
    else{
        return bs(nums,target,mid+1,high);
    }
}
int search(vector<int> &nums, int target) {
    return bs(nums,target,0,nums.size()-1);
}

logic 2 normal method
int search(vector<int> &nums, int target) {
    // Write your code here.
    int low=0;
    int high=nums.size()-1;
    while(low<=high){
        int mid=low+((high-low)/2);
        if(nums[mid]==target){
            return mid;
        }
        else if(nums[mid]>target){
            high=mid-1;
        }
        else{
            low=mid+1;
        }
    }
    return -1;
}
